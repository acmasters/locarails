# =============================================================================
# Receita de Capistrano 2.x para hospedagem compartilhada Linux
# utilizando estratégia de cópia sem servidor de versionamento
# =============================================================================
# 
# Para que esta receita funcione realize os seguintes passos:
# 
# 1. copie o arquivo backup_locaweb.rb no diretorio 'config' de sua aplicacao
# 2. crie um arquivo 'config/database.locaweb.yml' configurando de acordo com
#    os dados de sua hospedagem (que você recebeu por e-mail com o título de
#    "Instrucoes - MySQL - Incluso"). Um exemplo seria assim: 
#    
#    production:
#      adapter: mysql
#      encoding: utf8
#      database: railsdemo
#      username: railsdemo
#      password: xxxxxxxxx
#      host: mysql1179.locaweb.com.br
#    
# 3. se você estiver utilizando subversion, git ou outro versionador, garanta
#    que os arquivos 'config/database.yml' e o 'config/database.locaweb.yml'
#    estão na lista de arquivos ignorados. Eh boa pratica nao mante-los num
#    repositorio
# 4. garanta que voce tem capistrano instalado executando 'sudo gem install
#    capistrano'
# 5. garanta que, a partir do diretorio do seu projeto, voce executou o comando
#    'capify .' para que o capistrano se configure corretamente no seu projeto
# 6. substitua o arquivo 'config/deploy.rb' gerado, por este arquivo que voce
#    baixou da Locaweb
# 7. altere o arquivo 'config/deploy.rb' conforme o exemplo abaixo:
# 
#    set :user, "railsdemo"                         
#    set :domain, "railsdemo.tecnologia.ws"         
#    set :application, "demo"                       
#    set :repository, "~/Sites/rails/demo"  
#    
#    Note que 'application' eh o nome do diretorio que voce configurou no
#    Painel de Controle da Locaweb, onde ele mostra /public_html/demo, por
#    exemplo.
# 
# 8. Feito isso digite 'cap deploy:setup'. Isso deve ser executado apenas uma vez
#    para que toda a configuracao necessaria seja feita na sua hospedagem
#    
# 9. Finalmente, para colocar sua aplicação em produção, apenas execute 
#    'cap deploy'. Se nada der errado, já deve estar tudo no ar.
#    
# 10. Se em algum momento, voce notar que a instalacao atual subiu com problemas
#    sempre podera voltar atras usando o comando 'cap deploy:rollback', garantindo
#    que problemas inesperados nao o deixem fora do ar.
#
# Autor: Fabio Akita
# E-mail: fabio.akita@locaweb.com.br
# Locaweb Serviços de Internet S/A 
# Todos os direitos reservados

# =============================================================================
# CONFIGURE OS VALORES DE ACORDO COM SUA HOSPEDAGEM
# =============================================================================
set :user, "<%= config.usuario %>"
set :domain, "<%= config.dominio %>"
set :application, "<%= config.app_name %>"
set :repository, "<%= config.local_path %>"
<% if config.ssh_key_path -%>
ssh_options[:keys] = File.expand_path("<%= config.ssh_key_path %>") # apenas descomente se tiver chave
<% end -%>

# =============================================================================
# NAO MEXER DAQUI PARA BAIXO
# =============================================================================
role :web, domain
role :app, domain
role :db,  domain

set :deploy_to, "/home/#{user}/rails_app/#{application}" 
set :public_html, "/home/#{user}/public_html"
set :site_path, "#{public_html}/#{application}"
set :runner, nil
set :use_sudo, false
set :no_release, true

<% if config.mode == 'git' -%>
set :git_repo, "/home/#{user}/repo/#{application}.git"
  
set :scm, :git
set :branch, 'local'
set :deploy_via, :remote_cache
set :git_shallow_clone, 1
set :copy_exclude, %w(.git/* .svn/* log/* tmp/* .gitignore)
set :remote, "akitaonrails1"
set :scm_verbose, true
set :keep_releases, 5
<% else -%>
set :scm, :none # nenhum repositorio
set :deploy_via, :copy 
set :copy_exclude, %w(.git/* .svn/* log/* tmp/*)
set :keep_releases, 5
<% end -%>

ssh_options[:username] = user
ssh_options[:paranoid] = false 
